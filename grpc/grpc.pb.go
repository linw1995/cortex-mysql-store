// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PutChunksRequest struct {
	Chunks               []*Chunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutChunksRequest) Reset()         { *m = PutChunksRequest{} }
func (m *PutChunksRequest) String() string { return proto.CompactTextString(m) }
func (*PutChunksRequest) ProtoMessage()    {}
func (*PutChunksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *PutChunksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutChunksRequest.Unmarshal(m, b)
}
func (m *PutChunksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutChunksRequest.Marshal(b, m, deterministic)
}
func (m *PutChunksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutChunksRequest.Merge(m, src)
}
func (m *PutChunksRequest) XXX_Size() int {
	return xxx_messageInfo_PutChunksRequest.Size(m)
}
func (m *PutChunksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutChunksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutChunksRequest proto.InternalMessageInfo

func (m *PutChunksRequest) GetChunks() []*Chunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type GetChunksRequest struct {
	Chunks               []*Chunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChunksRequest) Reset()         { *m = GetChunksRequest{} }
func (m *GetChunksRequest) String() string { return proto.CompactTextString(m) }
func (*GetChunksRequest) ProtoMessage()    {}
func (*GetChunksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *GetChunksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChunksRequest.Unmarshal(m, b)
}
func (m *GetChunksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChunksRequest.Marshal(b, m, deterministic)
}
func (m *GetChunksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChunksRequest.Merge(m, src)
}
func (m *GetChunksRequest) XXX_Size() int {
	return xxx_messageInfo_GetChunksRequest.Size(m)
}
func (m *GetChunksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChunksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChunksRequest proto.InternalMessageInfo

func (m *GetChunksRequest) GetChunks() []*Chunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type GetChunksResponse struct {
	Chunks               []*Chunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChunksResponse) Reset()         { *m = GetChunksResponse{} }
func (m *GetChunksResponse) String() string { return proto.CompactTextString(m) }
func (*GetChunksResponse) ProtoMessage()    {}
func (*GetChunksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{2}
}

func (m *GetChunksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChunksResponse.Unmarshal(m, b)
}
func (m *GetChunksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChunksResponse.Marshal(b, m, deterministic)
}
func (m *GetChunksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChunksResponse.Merge(m, src)
}
func (m *GetChunksResponse) XXX_Size() int {
	return xxx_messageInfo_GetChunksResponse.Size(m)
}
func (m *GetChunksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChunksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChunksResponse proto.InternalMessageInfo

func (m *GetChunksResponse) GetChunks() []*Chunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type Chunk struct {
	Encoded              []byte   `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	TableName            string   `protobuf:"bytes,3,opt,name=tableName,proto3" json:"tableName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{3}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetEncoded() []byte {
	if m != nil {
		return m.Encoded
	}
	return nil
}

func (m *Chunk) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Chunk) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type ChunkID struct {
	ChunkID              string   `protobuf:"bytes,1,opt,name=chunkID,proto3" json:"chunkID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkID) Reset()         { *m = ChunkID{} }
func (m *ChunkID) String() string { return proto.CompactTextString(m) }
func (*ChunkID) ProtoMessage()    {}
func (*ChunkID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{4}
}

func (m *ChunkID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkID.Unmarshal(m, b)
}
func (m *ChunkID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkID.Marshal(b, m, deterministic)
}
func (m *ChunkID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkID.Merge(m, src)
}
func (m *ChunkID) XXX_Size() int {
	return xxx_messageInfo_ChunkID.Size(m)
}
func (m *ChunkID) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkID.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkID proto.InternalMessageInfo

func (m *ChunkID) GetChunkID() string {
	if m != nil {
		return m.ChunkID
	}
	return ""
}

type DeleteTableRequest struct {
	TableName            string   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTableRequest) Reset()         { *m = DeleteTableRequest{} }
func (m *DeleteTableRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTableRequest) ProtoMessage()    {}
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{5}
}

func (m *DeleteTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTableRequest.Unmarshal(m, b)
}
func (m *DeleteTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTableRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTableRequest.Merge(m, src)
}
func (m *DeleteTableRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTableRequest.Size(m)
}
func (m *DeleteTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTableRequest proto.InternalMessageInfo

func (m *DeleteTableRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type DescribeTableRequest struct {
	TableName            string   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeTableRequest) Reset()         { *m = DescribeTableRequest{} }
func (m *DescribeTableRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeTableRequest) ProtoMessage()    {}
func (*DescribeTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{6}
}

func (m *DescribeTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTableRequest.Unmarshal(m, b)
}
func (m *DescribeTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTableRequest.Marshal(b, m, deterministic)
}
func (m *DescribeTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTableRequest.Merge(m, src)
}
func (m *DescribeTableRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeTableRequest.Size(m)
}
func (m *DescribeTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTableRequest proto.InternalMessageInfo

func (m *DescribeTableRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type WriteBatch struct {
	Writes               []*IndexEntry `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	Deletes              []*IndexEntry `protobuf:"bytes,2,rep,name=deletes,proto3" json:"deletes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WriteBatch) Reset()         { *m = WriteBatch{} }
func (m *WriteBatch) String() string { return proto.CompactTextString(m) }
func (*WriteBatch) ProtoMessage()    {}
func (*WriteBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{7}
}

func (m *WriteBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteBatch.Unmarshal(m, b)
}
func (m *WriteBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteBatch.Marshal(b, m, deterministic)
}
func (m *WriteBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteBatch.Merge(m, src)
}
func (m *WriteBatch) XXX_Size() int {
	return xxx_messageInfo_WriteBatch.Size(m)
}
func (m *WriteBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteBatch.DiscardUnknown(m)
}

var xxx_messageInfo_WriteBatch proto.InternalMessageInfo

func (m *WriteBatch) GetWrites() []*IndexEntry {
	if m != nil {
		return m.Writes
	}
	return nil
}

func (m *WriteBatch) GetDeletes() []*IndexEntry {
	if m != nil {
		return m.Deletes
	}
	return nil
}

type WriteIndexRequest struct {
	Writes               []*IndexEntry `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WriteIndexRequest) Reset()         { *m = WriteIndexRequest{} }
func (m *WriteIndexRequest) String() string { return proto.CompactTextString(m) }
func (*WriteIndexRequest) ProtoMessage()    {}
func (*WriteIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{8}
}

func (m *WriteIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteIndexRequest.Unmarshal(m, b)
}
func (m *WriteIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteIndexRequest.Marshal(b, m, deterministic)
}
func (m *WriteIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteIndexRequest.Merge(m, src)
}
func (m *WriteIndexRequest) XXX_Size() int {
	return xxx_messageInfo_WriteIndexRequest.Size(m)
}
func (m *WriteIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteIndexRequest proto.InternalMessageInfo

func (m *WriteIndexRequest) GetWrites() []*IndexEntry {
	if m != nil {
		return m.Writes
	}
	return nil
}

type DeleteIndexRequest struct {
	Deletes              []*IndexEntry `protobuf:"bytes,1,rep,name=deletes,proto3" json:"deletes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteIndexRequest) Reset()         { *m = DeleteIndexRequest{} }
func (m *DeleteIndexRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIndexRequest) ProtoMessage()    {}
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{9}
}

func (m *DeleteIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIndexRequest.Unmarshal(m, b)
}
func (m *DeleteIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIndexRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIndexRequest.Merge(m, src)
}
func (m *DeleteIndexRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIndexRequest.Size(m)
}
func (m *DeleteIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIndexRequest proto.InternalMessageInfo

func (m *DeleteIndexRequest) GetDeletes() []*IndexEntry {
	if m != nil {
		return m.Deletes
	}
	return nil
}

type QueryIndexResponse struct {
	Rows                 []*Row   `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryIndexResponse) Reset()         { *m = QueryIndexResponse{} }
func (m *QueryIndexResponse) String() string { return proto.CompactTextString(m) }
func (*QueryIndexResponse) ProtoMessage()    {}
func (*QueryIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{10}
}

func (m *QueryIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryIndexResponse.Unmarshal(m, b)
}
func (m *QueryIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryIndexResponse.Marshal(b, m, deterministic)
}
func (m *QueryIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIndexResponse.Merge(m, src)
}
func (m *QueryIndexResponse) XXX_Size() int {
	return xxx_messageInfo_QueryIndexResponse.Size(m)
}
func (m *QueryIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIndexResponse proto.InternalMessageInfo

func (m *QueryIndexResponse) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

type Row struct {
	RangeValue           []byte   `protobuf:"bytes,1,opt,name=rangeValue,proto3" json:"rangeValue,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{11}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetRangeValue() []byte {
	if m != nil {
		return m.RangeValue
	}
	return nil
}

func (m *Row) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type IndexEntry struct {
	TableName            string   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	HashValue            string   `protobuf:"bytes,2,opt,name=hashValue,proto3" json:"hashValue,omitempty"`
	RangeValue           []byte   `protobuf:"bytes,3,opt,name=rangeValue,proto3" json:"rangeValue,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexEntry) Reset()         { *m = IndexEntry{} }
func (m *IndexEntry) String() string { return proto.CompactTextString(m) }
func (*IndexEntry) ProtoMessage()    {}
func (*IndexEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{12}
}

func (m *IndexEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexEntry.Unmarshal(m, b)
}
func (m *IndexEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexEntry.Marshal(b, m, deterministic)
}
func (m *IndexEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexEntry.Merge(m, src)
}
func (m *IndexEntry) XXX_Size() int {
	return xxx_messageInfo_IndexEntry.Size(m)
}
func (m *IndexEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexEntry.DiscardUnknown(m)
}

var xxx_messageInfo_IndexEntry proto.InternalMessageInfo

func (m *IndexEntry) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *IndexEntry) GetHashValue() string {
	if m != nil {
		return m.HashValue
	}
	return ""
}

func (m *IndexEntry) GetRangeValue() []byte {
	if m != nil {
		return m.RangeValue
	}
	return nil
}

func (m *IndexEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type QueryIndexRequest struct {
	TableName            string   `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	HashValue            string   `protobuf:"bytes,2,opt,name=hashValue,proto3" json:"hashValue,omitempty"`
	RangeValuePrefix     []byte   `protobuf:"bytes,3,opt,name=rangeValuePrefix,proto3" json:"rangeValuePrefix,omitempty"`
	RangeValueStart      []byte   `protobuf:"bytes,4,opt,name=rangeValueStart,proto3" json:"rangeValueStart,omitempty"`
	ValueEqual           []byte   `protobuf:"bytes,5,opt,name=valueEqual,proto3" json:"valueEqual,omitempty"`
	Immutable            bool     `protobuf:"varint,6,opt,name=immutable,proto3" json:"immutable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryIndexRequest) Reset()         { *m = QueryIndexRequest{} }
func (m *QueryIndexRequest) String() string { return proto.CompactTextString(m) }
func (*QueryIndexRequest) ProtoMessage()    {}
func (*QueryIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{13}
}

func (m *QueryIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryIndexRequest.Unmarshal(m, b)
}
func (m *QueryIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryIndexRequest.Marshal(b, m, deterministic)
}
func (m *QueryIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIndexRequest.Merge(m, src)
}
func (m *QueryIndexRequest) XXX_Size() int {
	return xxx_messageInfo_QueryIndexRequest.Size(m)
}
func (m *QueryIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIndexRequest proto.InternalMessageInfo

func (m *QueryIndexRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *QueryIndexRequest) GetHashValue() string {
	if m != nil {
		return m.HashValue
	}
	return ""
}

func (m *QueryIndexRequest) GetRangeValuePrefix() []byte {
	if m != nil {
		return m.RangeValuePrefix
	}
	return nil
}

func (m *QueryIndexRequest) GetRangeValueStart() []byte {
	if m != nil {
		return m.RangeValueStart
	}
	return nil
}

func (m *QueryIndexRequest) GetValueEqual() []byte {
	if m != nil {
		return m.ValueEqual
	}
	return nil
}

func (m *QueryIndexRequest) GetImmutable() bool {
	if m != nil {
		return m.Immutable
	}
	return false
}

type UpdateTableRequest struct {
	Current              *TableDesc `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Expected             *TableDesc `protobuf:"bytes,2,opt,name=expected,proto3" json:"expected,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateTableRequest) Reset()         { *m = UpdateTableRequest{} }
func (m *UpdateTableRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTableRequest) ProtoMessage()    {}
func (*UpdateTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{14}
}

func (m *UpdateTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTableRequest.Unmarshal(m, b)
}
func (m *UpdateTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTableRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTableRequest.Merge(m, src)
}
func (m *UpdateTableRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTableRequest.Size(m)
}
func (m *UpdateTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTableRequest proto.InternalMessageInfo

func (m *UpdateTableRequest) GetCurrent() *TableDesc {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *UpdateTableRequest) GetExpected() *TableDesc {
	if m != nil {
		return m.Expected
	}
	return nil
}

type DescribeTableResponse struct {
	Desc                 *TableDesc `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	IsActive             bool       `protobuf:"varint,2,opt,name=isActive,proto3" json:"isActive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DescribeTableResponse) Reset()         { *m = DescribeTableResponse{} }
func (m *DescribeTableResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeTableResponse) ProtoMessage()    {}
func (*DescribeTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{15}
}

func (m *DescribeTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTableResponse.Unmarshal(m, b)
}
func (m *DescribeTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTableResponse.Marshal(b, m, deterministic)
}
func (m *DescribeTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTableResponse.Merge(m, src)
}
func (m *DescribeTableResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeTableResponse.Size(m)
}
func (m *DescribeTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTableResponse proto.InternalMessageInfo

func (m *DescribeTableResponse) GetDesc() *TableDesc {
	if m != nil {
		return m.Desc
	}
	return nil
}

func (m *DescribeTableResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type CreateTableRequest struct {
	Desc                 *TableDesc `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTableRequest) Reset()         { *m = CreateTableRequest{} }
func (m *CreateTableRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTableRequest) ProtoMessage()    {}
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{16}
}

func (m *CreateTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTableRequest.Unmarshal(m, b)
}
func (m *CreateTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTableRequest.Marshal(b, m, deterministic)
}
func (m *CreateTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTableRequest.Merge(m, src)
}
func (m *CreateTableRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTableRequest.Size(m)
}
func (m *CreateTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTableRequest proto.InternalMessageInfo

func (m *CreateTableRequest) GetDesc() *TableDesc {
	if m != nil {
		return m.Desc
	}
	return nil
}

type TableDesc struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UseOnDemandIOMode    bool              `protobuf:"varint,2,opt,name=useOnDemandIOMode,proto3" json:"useOnDemandIOMode,omitempty"`
	ProvisionedRead      int64             `protobuf:"varint,3,opt,name=provisionedRead,proto3" json:"provisionedRead,omitempty"`
	ProvisionedWrite     int64             `protobuf:"varint,4,opt,name=provisionedWrite,proto3" json:"provisionedWrite,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TableDesc) Reset()         { *m = TableDesc{} }
func (m *TableDesc) String() string { return proto.CompactTextString(m) }
func (*TableDesc) ProtoMessage()    {}
func (*TableDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{17}
}

func (m *TableDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableDesc.Unmarshal(m, b)
}
func (m *TableDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableDesc.Marshal(b, m, deterministic)
}
func (m *TableDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableDesc.Merge(m, src)
}
func (m *TableDesc) XXX_Size() int {
	return xxx_messageInfo_TableDesc.Size(m)
}
func (m *TableDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_TableDesc.DiscardUnknown(m)
}

var xxx_messageInfo_TableDesc proto.InternalMessageInfo

func (m *TableDesc) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TableDesc) GetUseOnDemandIOMode() bool {
	if m != nil {
		return m.UseOnDemandIOMode
	}
	return false
}

func (m *TableDesc) GetProvisionedRead() int64 {
	if m != nil {
		return m.ProvisionedRead
	}
	return 0
}

func (m *TableDesc) GetProvisionedWrite() int64 {
	if m != nil {
		return m.ProvisionedWrite
	}
	return 0
}

func (m *TableDesc) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListTablesResponse struct {
	TableNames           []string `protobuf:"bytes,1,rep,name=tableNames,proto3" json:"tableNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTablesResponse) Reset()         { *m = ListTablesResponse{} }
func (m *ListTablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListTablesResponse) ProtoMessage()    {}
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{18}
}

func (m *ListTablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTablesResponse.Unmarshal(m, b)
}
func (m *ListTablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTablesResponse.Marshal(b, m, deterministic)
}
func (m *ListTablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTablesResponse.Merge(m, src)
}
func (m *ListTablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListTablesResponse.Size(m)
}
func (m *ListTablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTablesResponse proto.InternalMessageInfo

func (m *ListTablesResponse) GetTableNames() []string {
	if m != nil {
		return m.TableNames
	}
	return nil
}

type Labels struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Labels) Reset()         { *m = Labels{} }
func (m *Labels) String() string { return proto.CompactTextString(m) }
func (*Labels) ProtoMessage()    {}
func (*Labels) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{19}
}

func (m *Labels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labels.Unmarshal(m, b)
}
func (m *Labels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labels.Marshal(b, m, deterministic)
}
func (m *Labels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labels.Merge(m, src)
}
func (m *Labels) XXX_Size() int {
	return xxx_messageInfo_Labels.Size(m)
}
func (m *Labels) XXX_DiscardUnknown() {
	xxx_messageInfo_Labels.DiscardUnknown(m)
}

var xxx_messageInfo_Labels proto.InternalMessageInfo

func (m *Labels) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Labels) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*PutChunksRequest)(nil), "grpc.PutChunksRequest")
	proto.RegisterType((*GetChunksRequest)(nil), "grpc.GetChunksRequest")
	proto.RegisterType((*GetChunksResponse)(nil), "grpc.GetChunksResponse")
	proto.RegisterType((*Chunk)(nil), "grpc.Chunk")
	proto.RegisterType((*ChunkID)(nil), "grpc.ChunkID")
	proto.RegisterType((*DeleteTableRequest)(nil), "grpc.DeleteTableRequest")
	proto.RegisterType((*DescribeTableRequest)(nil), "grpc.DescribeTableRequest")
	proto.RegisterType((*WriteBatch)(nil), "grpc.WriteBatch")
	proto.RegisterType((*WriteIndexRequest)(nil), "grpc.WriteIndexRequest")
	proto.RegisterType((*DeleteIndexRequest)(nil), "grpc.DeleteIndexRequest")
	proto.RegisterType((*QueryIndexResponse)(nil), "grpc.QueryIndexResponse")
	proto.RegisterType((*Row)(nil), "grpc.Row")
	proto.RegisterType((*IndexEntry)(nil), "grpc.IndexEntry")
	proto.RegisterType((*QueryIndexRequest)(nil), "grpc.QueryIndexRequest")
	proto.RegisterType((*UpdateTableRequest)(nil), "grpc.UpdateTableRequest")
	proto.RegisterType((*DescribeTableResponse)(nil), "grpc.DescribeTableResponse")
	proto.RegisterType((*CreateTableRequest)(nil), "grpc.CreateTableRequest")
	proto.RegisterType((*TableDesc)(nil), "grpc.TableDesc")
	proto.RegisterMapType((map[string]string)(nil), "grpc.TableDesc.TagsEntry")
	proto.RegisterType((*ListTablesResponse)(nil), "grpc.ListTablesResponse")
	proto.RegisterType((*Labels)(nil), "grpc.Labels")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 856 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xef, 0x8e, 0xdb, 0x44,
	0x10, 0x97, 0xf3, 0xdf, 0x93, 0x56, 0x4d, 0x56, 0xa5, 0x35, 0x2e, 0x54, 0x91, 0xfb, 0x25, 0x14,
	0x48, 0x51, 0x5a, 0xd4, 0x42, 0x55, 0x4a, 0x69, 0x4e, 0x10, 0xa9, 0xd0, 0x76, 0x39, 0x0e, 0xbe,
	0x21, 0xc7, 0x9e, 0x4b, 0xac, 0x4b, 0xec, 0x9c, 0x77, 0x7d, 0xb9, 0x7c, 0xe1, 0x05, 0x78, 0x39,
	0xde, 0x81, 0x17, 0x41, 0xde, 0xf5, 0xda, 0x8e, 0x1d, 0xdf, 0x85, 0x7e, 0xdb, 0xfd, 0xcd, 0xbf,
	0xdf, 0xec, 0xec, 0xcc, 0x00, 0xcc, 0xc3, 0xb5, 0x33, 0x5a, 0x87, 0x01, 0x0f, 0x48, 0x23, 0x3e,
	0x9b, 0xf7, 0xe6, 0x41, 0x30, 0x5f, 0xe2, 0x23, 0x81, 0xcd, 0xa2, 0xd3, 0x47, 0xb8, 0x5a, 0xf3,
	0xad, 0x54, 0xb1, 0x9e, 0x42, 0xef, 0x5d, 0xc4, 0x5f, 0x2f, 0x22, 0xff, 0x8c, 0x51, 0x3c, 0x8f,
	0x90, 0x71, 0xf2, 0x00, 0x5a, 0x8e, 0x00, 0x0c, 0x6d, 0x50, 0x1f, 0x76, 0xc7, 0xdd, 0x91, 0xf0,
	0x29, 0x94, 0x68, 0x22, 0x8a, 0x0d, 0x7f, 0xc4, 0x0f, 0x31, 0x7c, 0x06, 0xfd, 0x9c, 0x21, 0x5b,
	0x07, 0x3e, 0xc3, 0xc3, 0x2c, 0xdf, 0x43, 0x53, 0x00, 0xc4, 0x80, 0x36, 0xfa, 0x4e, 0xe0, 0xa2,
	0x6b, 0x68, 0x03, 0x6d, 0x78, 0x83, 0xaa, 0x2b, 0xe9, 0x41, 0xfd, 0x0c, 0xb7, 0x46, 0x6d, 0xa0,
	0x0d, 0x75, 0x1a, 0x1f, 0xc9, 0x27, 0xa0, 0x73, 0x7b, 0xb6, 0xc4, 0x5f, 0xec, 0x15, 0x1a, 0x75,
	0x81, 0x67, 0x80, 0xf5, 0x00, 0xda, 0xc2, 0xe5, 0x74, 0x12, 0x3b, 0x75, 0xe4, 0x51, 0x38, 0xd5,
	0xa9, 0xba, 0x5a, 0x63, 0x20, 0x13, 0x5c, 0x22, 0xc7, 0xe3, 0xd8, 0x4e, 0x25, 0xbb, 0xe3, 0x58,
	0x2b, 0x3a, 0x7e, 0x02, 0xb7, 0x27, 0xc8, 0x9c, 0xd0, 0x9b, 0xfd, 0x1f, 0xab, 0x19, 0xc0, 0xef,
	0xa1, 0xc7, 0xf1, 0x07, 0x9b, 0x3b, 0x0b, 0x32, 0x84, 0xd6, 0x26, 0xbe, 0xa9, 0x47, 0xe9, 0xc9,
	0x47, 0x99, 0xfa, 0x2e, 0x5e, 0x1e, 0xf9, 0x3c, 0xdc, 0xd2, 0x44, 0x4e, 0x1e, 0x42, 0xdb, 0x15,
	0x0c, 0x99, 0x51, 0xab, 0x50, 0x55, 0x0a, 0xd6, 0x0b, 0xe8, 0x8b, 0x18, 0x42, 0xa6, 0x68, 0x1d,
	0x1c, 0xca, 0xfa, 0x5e, 0x3d, 0xc6, 0x8e, 0x7d, 0x8e, 0x80, 0x76, 0x1d, 0x81, 0xc7, 0x40, 0xde,
	0x47, 0x18, 0x6e, 0x13, 0x07, 0xc9, 0x0f, 0xf8, 0x14, 0x1a, 0x61, 0xb0, 0x51, 0xe6, 0xba, 0x34,
	0xa7, 0xc1, 0x86, 0x0a, 0xd8, 0x7a, 0x0e, 0x75, 0x1a, 0x6c, 0xc8, 0x7d, 0x80, 0xd0, 0xf6, 0xe7,
	0x78, 0x62, 0x2f, 0x23, 0x4c, 0x8a, 0x9f, 0x43, 0xc8, 0x6d, 0x68, 0x5e, 0x08, 0x51, 0x4d, 0x88,
	0xe4, 0xc5, 0xfa, 0x0b, 0x20, 0x23, 0x72, 0x75, 0x09, 0x62, 0xe9, 0xc2, 0x66, 0x8b, 0x93, 0xd4,
	0x8b, 0x4e, 0x33, 0xa0, 0x10, 0xbf, 0x5e, 0x1d, 0xbf, 0x91, 0x8f, 0xff, 0xaf, 0x06, 0xfd, 0x7c,
	0xca, 0x07, 0x7c, 0x85, 0x6b, 0x78, 0x3c, 0x84, 0x5e, 0x16, 0xf5, 0x5d, 0x88, 0xa7, 0xde, 0x65,
	0xc2, 0xa6, 0x84, 0x93, 0x21, 0xdc, 0xca, 0xb0, 0x5f, 0xb9, 0x1d, 0xf2, 0x84, 0x5d, 0x11, 0x8e,
	0xb3, 0x13, 0x84, 0x8f, 0xce, 0x23, 0x7b, 0x69, 0x34, 0x65, 0x76, 0x19, 0x12, 0x73, 0xf2, 0x56,
	0xab, 0x48, 0x90, 0x34, 0x5a, 0x03, 0x6d, 0xd8, 0xa1, 0x19, 0x60, 0x2d, 0x81, 0xfc, 0xb6, 0x76,
	0xed, 0x42, 0x9b, 0x7c, 0x06, 0x6d, 0x27, 0x0a, 0x43, 0xf4, 0xb9, 0xc8, 0xb1, 0x3b, 0xbe, 0x25,
	0x4b, 0x2b, 0x94, 0xe2, 0x16, 0xa1, 0x4a, 0x4e, 0x3e, 0x87, 0x0e, 0x5e, 0xae, 0xd1, 0xe1, 0xe8,
	0x8a, 0x8c, 0xf7, 0xe8, 0xa6, 0x0a, 0xd6, 0x1f, 0xf0, 0x51, 0xa1, 0xc1, 0xd2, 0x51, 0xd2, 0x70,
	0x91, 0x39, 0x55, 0xd1, 0x84, 0x90, 0x98, 0xd0, 0xf1, 0xd8, 0x2b, 0x87, 0x7b, 0x17, 0xf2, 0x71,
	0x3b, 0x34, 0xbd, 0x5b, 0xdf, 0x00, 0x79, 0x1d, 0x62, 0x31, 0x8f, 0x43, 0xdc, 0x5a, 0x7f, 0xd7,
	0x40, 0x4f, 0x31, 0x42, 0xa0, 0xe1, 0x67, 0xb5, 0x15, 0x67, 0xf2, 0x05, 0xf4, 0x23, 0x86, 0x6f,
	0xfd, 0x09, 0xae, 0x6c, 0xdf, 0x9d, 0xbe, 0xfd, 0x39, 0x70, 0x15, 0x83, 0xb2, 0x20, 0x2e, 0xdd,
	0x3a, 0x0c, 0x2e, 0x3c, 0xe6, 0x05, 0x3e, 0xba, 0x14, 0x6d, 0x57, 0x54, 0xb9, 0x4e, 0x8b, 0x70,
	0xfc, 0x21, 0x72, 0x90, 0x68, 0x70, 0x51, 0xe5, 0x3a, 0x2d, 0xe1, 0xe4, 0x4b, 0x68, 0x70, 0x7b,
	0xce, 0x8c, 0xa6, 0x68, 0xb5, 0x8f, 0x0b, 0xa9, 0x8c, 0x8e, 0xed, 0x39, 0x93, 0x2d, 0x2b, 0xd4,
	0xcc, 0xa7, 0x71, 0x4e, 0x09, 0xa4, 0x06, 0xac, 0x96, 0x0d, 0xd8, 0x9d, 0x96, 0xd3, 0x93, 0x2f,
	0xff, 0x6d, 0xed, 0x99, 0x66, 0x3d, 0x01, 0xf2, 0xc6, 0x63, 0x5c, 0x78, 0xce, 0x46, 0xfd, 0x7d,
	0x80, 0xf4, 0x97, 0xcb, 0x76, 0xd7, 0x69, 0x0e, 0xb1, 0xc6, 0xd0, 0x7a, 0x63, 0xcf, 0x70, 0xc9,
	0xf6, 0xbe, 0xdf, 0xde, 0x68, 0xe3, 0x7f, 0x9a, 0x72, 0xef, 0xfd, 0xc9, 0x78, 0x10, 0x22, 0x79,
	0x91, 0x8c, 0x51, 0xd1, 0x6e, 0xe4, 0xae, 0x4c, 0xb0, 0x34, 0xf4, 0xcc, 0x3b, 0x23, 0xb9, 0x19,
	0x47, 0x6a, 0x33, 0x8e, 0x8e, 0xe2, 0xcd, 0x48, 0x5e, 0x01, 0x64, 0xdd, 0xaa, 0xcc, 0x4b, 0xfd,
	0x6b, 0x1a, 0x65, 0x81, 0x4c, 0xf1, 0x2b, 0x8d, 0xbc, 0x84, 0x6e, 0x6e, 0x4a, 0x92, 0x44, 0xb5,
	0x3c, 0x38, 0x2b, 0x39, 0x3c, 0x07, 0x3d, 0xdd, 0xcb, 0xe4, 0x8e, 0x34, 0x2f, 0x2e, 0xea, 0x4a,
	0xe3, 0xef, 0x40, 0x4f, 0x57, 0xac, 0x32, 0x2e, 0x2e, 0x6b, 0xf3, 0x6e, 0x09, 0x4f, 0xd9, 0x7f,
	0x0d, 0x37, 0x24, 0xd5, 0xc4, 0xc5, 0xcd, 0xdc, 0x36, 0x9e, 0x4e, 0xae, 0x08, 0x0b, 0x59, 0xbd,
	0x49, 0x85, 0x96, 0x7a, 0xb6, 0x3d, 0x3f, 0xe3, 0x25, 0x74, 0x73, 0x8d, 0xa7, 0x1e, 0xad, 0xdc,
	0x8b, 0x95, 0x04, 0xd2, 0x57, 0xdf, 0x71, 0x50, 0xde, 0xdd, 0x95, 0x0e, 0x7e, 0x82, 0x9b, 0x3b,
	0x43, 0x85, 0x98, 0xca, 0x45, 0x79, 0x95, 0x9b, 0xf7, 0xf6, 0xca, 0xb2, 0x5c, 0x72, 0xc3, 0x50,
	0x51, 0x29, 0xcf, 0xc7, 0x2a, 0x2a, 0xb3, 0x96, 0xb8, 0x3f, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff,
	0xca, 0x38, 0x17, 0xac, 0xd0, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcStoreClient is the client API for GrpcStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcStoreClient interface {
	/// WriteIndex writes batch of indexes to the index tables.
	WriteIndex(ctx context.Context, in *WriteIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	/// QueryIndex reads the indexes required for given query & sends back the batch of rows
	/// in rpc streams
	QueryIndex(ctx context.Context, in *QueryIndexRequest, opts ...grpc.CallOption) (GrpcStore_QueryIndexClient, error)
	/// DeleteIndex deletes the batch of index entries from the index tables
	DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	/// PutChunks saves the batch of chunks into the chunk tables.
	PutChunks(ctx context.Context, in *PutChunksRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	/// GetChunks requests for batch of chunks and the batch of chunks are sent back in rpc streams
	/// batching needs to be performed at server level as per requirement instead of sending single chunk per stream.
	/// In GetChunks rpc request send buf as nil
	GetChunks(ctx context.Context, in *GetChunksRequest, opts ...grpc.CallOption) (GrpcStore_GetChunksClient, error)
	/// DeleteChunks deletes the chunks based on chunkID.
	DeleteChunks(ctx context.Context, in *ChunkID, opts ...grpc.CallOption) (*empty.Empty, error)
	/// Lists all the tables that exists in the database.
	ListTables(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListTablesResponse, error)
	/// Creates a table with provided name & attributes.
	CreateTable(ctx context.Context, in *CreateTableRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Deletes a table using table name provided.
	DeleteTable(ctx context.Context, in *DeleteTableRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Describes a table information for the provided table.
	DescribeTable(ctx context.Context, in *DescribeTableRequest, opts ...grpc.CallOption) (*DescribeTableResponse, error)
	// Update a table with newly provided table information.
	UpdateTable(ctx context.Context, in *UpdateTableRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type grpcStoreClient struct {
	cc *grpc.ClientConn
}

func NewGrpcStoreClient(cc *grpc.ClientConn) GrpcStoreClient {
	return &grpcStoreClient{cc}
}

func (c *grpcStoreClient) WriteIndex(ctx context.Context, in *WriteIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/WriteIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) QueryIndex(ctx context.Context, in *QueryIndexRequest, opts ...grpc.CallOption) (GrpcStore_QueryIndexClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcStore_serviceDesc.Streams[0], "/grpc.grpc_store/QueryIndex", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcStoreQueryIndexClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcStore_QueryIndexClient interface {
	Recv() (*QueryIndexResponse, error)
	grpc.ClientStream
}

type grpcStoreQueryIndexClient struct {
	grpc.ClientStream
}

func (x *grpcStoreQueryIndexClient) Recv() (*QueryIndexResponse, error) {
	m := new(QueryIndexResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grpcStoreClient) DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/DeleteIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) PutChunks(ctx context.Context, in *PutChunksRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/PutChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) GetChunks(ctx context.Context, in *GetChunksRequest, opts ...grpc.CallOption) (GrpcStore_GetChunksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcStore_serviceDesc.Streams[1], "/grpc.grpc_store/GetChunks", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcStoreGetChunksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrpcStore_GetChunksClient interface {
	Recv() (*GetChunksResponse, error)
	grpc.ClientStream
}

type grpcStoreGetChunksClient struct {
	grpc.ClientStream
}

func (x *grpcStoreGetChunksClient) Recv() (*GetChunksResponse, error) {
	m := new(GetChunksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grpcStoreClient) DeleteChunks(ctx context.Context, in *ChunkID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/DeleteChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) ListTables(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListTablesResponse, error) {
	out := new(ListTablesResponse)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/ListTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) CreateTable(ctx context.Context, in *CreateTableRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/CreateTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) DeleteTable(ctx context.Context, in *DeleteTableRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/DeleteTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) DescribeTable(ctx context.Context, in *DescribeTableRequest, opts ...grpc.CallOption) (*DescribeTableResponse, error) {
	out := new(DescribeTableResponse)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/DescribeTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcStoreClient) UpdateTable(ctx context.Context, in *UpdateTableRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.grpc_store/UpdateTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcStoreServer is the server API for GrpcStore service.
type GrpcStoreServer interface {
	/// WriteIndex writes batch of indexes to the index tables.
	WriteIndex(context.Context, *WriteIndexRequest) (*empty.Empty, error)
	/// QueryIndex reads the indexes required for given query & sends back the batch of rows
	/// in rpc streams
	QueryIndex(*QueryIndexRequest, GrpcStore_QueryIndexServer) error
	/// DeleteIndex deletes the batch of index entries from the index tables
	DeleteIndex(context.Context, *DeleteIndexRequest) (*empty.Empty, error)
	/// PutChunks saves the batch of chunks into the chunk tables.
	PutChunks(context.Context, *PutChunksRequest) (*empty.Empty, error)
	/// GetChunks requests for batch of chunks and the batch of chunks are sent back in rpc streams
	/// batching needs to be performed at server level as per requirement instead of sending single chunk per stream.
	/// In GetChunks rpc request send buf as nil
	GetChunks(*GetChunksRequest, GrpcStore_GetChunksServer) error
	/// DeleteChunks deletes the chunks based on chunkID.
	DeleteChunks(context.Context, *ChunkID) (*empty.Empty, error)
	/// Lists all the tables that exists in the database.
	ListTables(context.Context, *empty.Empty) (*ListTablesResponse, error)
	/// Creates a table with provided name & attributes.
	CreateTable(context.Context, *CreateTableRequest) (*empty.Empty, error)
	// Deletes a table using table name provided.
	DeleteTable(context.Context, *DeleteTableRequest) (*empty.Empty, error)
	// Describes a table information for the provided table.
	DescribeTable(context.Context, *DescribeTableRequest) (*DescribeTableResponse, error)
	// Update a table with newly provided table information.
	UpdateTable(context.Context, *UpdateTableRequest) (*empty.Empty, error)
}

// UnimplementedGrpcStoreServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcStoreServer struct {
}

func (*UnimplementedGrpcStoreServer) WriteIndex(ctx context.Context, req *WriteIndexRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteIndex not implemented")
}
func (*UnimplementedGrpcStoreServer) QueryIndex(req *QueryIndexRequest, srv GrpcStore_QueryIndexServer) error {
	return status.Errorf(codes.Unimplemented, "method QueryIndex not implemented")
}
func (*UnimplementedGrpcStoreServer) DeleteIndex(ctx context.Context, req *DeleteIndexRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIndex not implemented")
}
func (*UnimplementedGrpcStoreServer) PutChunks(ctx context.Context, req *PutChunksRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutChunks not implemented")
}
func (*UnimplementedGrpcStoreServer) GetChunks(req *GetChunksRequest, srv GrpcStore_GetChunksServer) error {
	return status.Errorf(codes.Unimplemented, "method GetChunks not implemented")
}
func (*UnimplementedGrpcStoreServer) DeleteChunks(ctx context.Context, req *ChunkID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChunks not implemented")
}
func (*UnimplementedGrpcStoreServer) ListTables(ctx context.Context, req *empty.Empty) (*ListTablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTables not implemented")
}
func (*UnimplementedGrpcStoreServer) CreateTable(ctx context.Context, req *CreateTableRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTable not implemented")
}
func (*UnimplementedGrpcStoreServer) DeleteTable(ctx context.Context, req *DeleteTableRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTable not implemented")
}
func (*UnimplementedGrpcStoreServer) DescribeTable(ctx context.Context, req *DescribeTableRequest) (*DescribeTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeTable not implemented")
}
func (*UnimplementedGrpcStoreServer) UpdateTable(ctx context.Context, req *UpdateTableRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTable not implemented")
}

func RegisterGrpcStoreServer(s *grpc.Server, srv GrpcStoreServer) {
	s.RegisterService(&_GrpcStore_serviceDesc, srv)
}

func _GrpcStore_WriteIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).WriteIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/WriteIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).WriteIndex(ctx, req.(*WriteIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_QueryIndex_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryIndexRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcStoreServer).QueryIndex(m, &grpcStoreQueryIndexServer{stream})
}

type GrpcStore_QueryIndexServer interface {
	Send(*QueryIndexResponse) error
	grpc.ServerStream
}

type grpcStoreQueryIndexServer struct {
	grpc.ServerStream
}

func (x *grpcStoreQueryIndexServer) Send(m *QueryIndexResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GrpcStore_DeleteIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).DeleteIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/DeleteIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).DeleteIndex(ctx, req.(*DeleteIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_PutChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutChunksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).PutChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/PutChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).PutChunks(ctx, req.(*PutChunksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_GetChunks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetChunksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrpcStoreServer).GetChunks(m, &grpcStoreGetChunksServer{stream})
}

type GrpcStore_GetChunksServer interface {
	Send(*GetChunksResponse) error
	grpc.ServerStream
}

type grpcStoreGetChunksServer struct {
	grpc.ServerStream
}

func (x *grpcStoreGetChunksServer) Send(m *GetChunksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GrpcStore_DeleteChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChunkID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).DeleteChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/DeleteChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).DeleteChunks(ctx, req.(*ChunkID))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_ListTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).ListTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/ListTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).ListTables(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_CreateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).CreateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/CreateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).CreateTable(ctx, req.(*CreateTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_DeleteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).DeleteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/DeleteTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).DeleteTable(ctx, req.(*DeleteTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_DescribeTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).DescribeTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/DescribeTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).DescribeTable(ctx, req.(*DescribeTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcStore_UpdateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcStoreServer).UpdateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_store/UpdateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcStoreServer).UpdateTable(ctx, req.(*UpdateTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.grpc_store",
	HandlerType: (*GrpcStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteIndex",
			Handler:    _GrpcStore_WriteIndex_Handler,
		},
		{
			MethodName: "DeleteIndex",
			Handler:    _GrpcStore_DeleteIndex_Handler,
		},
		{
			MethodName: "PutChunks",
			Handler:    _GrpcStore_PutChunks_Handler,
		},
		{
			MethodName: "DeleteChunks",
			Handler:    _GrpcStore_DeleteChunks_Handler,
		},
		{
			MethodName: "ListTables",
			Handler:    _GrpcStore_ListTables_Handler,
		},
		{
			MethodName: "CreateTable",
			Handler:    _GrpcStore_CreateTable_Handler,
		},
		{
			MethodName: "DeleteTable",
			Handler:    _GrpcStore_DeleteTable_Handler,
		},
		{
			MethodName: "DescribeTable",
			Handler:    _GrpcStore_DescribeTable_Handler,
		},
		{
			MethodName: "UpdateTable",
			Handler:    _GrpcStore_UpdateTable_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QueryIndex",
			Handler:       _GrpcStore_QueryIndex_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetChunks",
			Handler:       _GrpcStore_GetChunks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc.proto",
}
